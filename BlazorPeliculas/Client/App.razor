@inject LazyAssemblyLoader lazyLoader
@using System.Reflection

<Router AppAssembly="@typeof(App).Assembly" AdditionalAssemblies="assemblies" OnNavigateAsync="OnNavigationAsync">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <CustomNotFound></CustomNotFound>
        </LayoutView>
    </NotFound>
</Router>

@code {
    private List<Assembly> assemblies = new List<Assembly>();
    private async Task OnNavigationAsync(NavigationContext context)
    {
        if (context.Path.EndsWith("counter"))
        {
            var assembliesCargados = await lazyLoader.LoadAssembliesAsync(
                new List<string> { "MathNet.Numerics.dll" });

            assemblies.AddRange(assembliesCargados);
        }
    }
}
